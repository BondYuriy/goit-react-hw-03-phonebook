{"version":3,"sources":["components/ContactList/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","inputId","inputName","v4","inputNumber","ContactForm","state","handleChange","currentTarget","value","setState","submitForm","evt","preventDefault","onSubmitContact","props","id","reset","this","className","styles","form","onSubmit","htmlFor","type","onChange","btn","Component","Filter","filter","onFilterChange","Contact","onDelete","onClick","ContactList","contacts","map","contact","item","key","App","addContact","obj","toLocaleLowerCase","length","alert","prevState","handleFilterChange","deleteContact","storageContacts","JSON","parse","localStorage","getItem","console","log","prevProps","setItem","stringify","filteredFriends","friend","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb24c692.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contact_btn__1GbhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\"};","import React, { Component } from 'react';\nimport v4 from 'uuid/v4';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst inputId = { inputName: v4(), inputNumber: v4() };\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmitContact: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = evt => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n\n    const { onSubmitContact } = this.props;\n\n    /* id - только для работы функционала */\n    const id = v4();\n\n    onSubmitContact({ name, number, id });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.submitForm}>\n        <label htmlFor={inputId.inputName}>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={inputId.inputName}\n          />\n        </label>\n        <label htmlFor={inputId.inputNumber}>\n          <p>Number</p>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={inputId.inputNumber}\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onFilterChange }) => (\n  <div>\n    <p>Find contacts by name</p>\n    <input type=\"text\" name=\"filter\" value={filter} onChange={onFilterChange} />\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDelete }) => (\n  <>\n    <span>{`${name}: ${number}`}</span>\n    <button className={styles.btn} type=\"button\" onClick={onDelete}>\n      Delete\n    </button>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact/Contact';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(contact => {\n      const { name, number, id } = contact;\n      return (\n        <li className={styles.item} key={name}>\n          <Contact name={name} number={number} onDelete={() => onDelete(id)} />\n        </li>\n      );\n    })}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    console.log('storageContacts: ', storageContacts);\n\n    if (storageContacts !== null) {\n      this.setState({ contacts: storageContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = obj => {\n    const { contacts } = this.state;\n\n    const isResult = contacts.filter(\n      contact =>\n        contact.name.toLocaleLowerCase() === obj.name.toLocaleLowerCase(),\n    );\n\n    if (isResult.length > 0) {\n      alert('such name exists');\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, obj],\n      }));\n    }\n  };\n\n  handleFilterChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    this.setState({ contacts: contacts.filter(contact => contact.id !== id) });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    console.log('render: ', contacts);\n\n    const filteredFriends = contacts.filter(friend =>\n      friend.name.toLocaleLowerCase().includes(filter),\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onFilterChange={this.handleFilterChange} />\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={filteredFriends}\n            onDelete={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.module.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}